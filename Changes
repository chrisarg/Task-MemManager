Revision history for {{$dist->name}}

{{$NEXT}}

0.08      2025-09-22 21:27:05-06:00 America/Denver
- Expanded documentation to include details on error handling e.g. when the
allocator will return undef
- Allows options when loading the package to specify which allocators to use
- Allows the loading of optional View modules that generates (CPU) memory views
  of the allocated buffers
- Allows the loading of optional Device  modules that generates Device (e.g. GPU)
  mapping and update of buffers
- Added a DEBUG constant to control debug output and checks from the environment
0.07      2025-09-14 15:17:53-06:00 America/Denver
- Fixed subtle bug in the new method that was expecting a reference to the class
0.06      2025-09-14 14:29:14-06:00 America/Denver
- Moved the generation of the initial value as a byte into the new method
- Fixed importing of View and GPU modules unless explicitly requested
- Changed carp to warn and croak to die as we are approaching a stable
release
- Added DEBUG constant to control debug output and checks from the environment
- Added checks to ensure we do not allocate an invalid buffer size
0.05      2025-09-13 06:51:51-06:00 America/Denver
- Fixed documentation formatting
0.04      2025-09-12 17:52:43-06:00 America/Denver
- Added documentation for consumer
- Allocators are now optionally passed the constructor options
0.03      2025-09-10 22:45:12-06:00 America/Denver
- Updated documentation
- Fixed error of only assigning the last byte of the buffer to the init value
when using PerlAlloc
- Removed un-necessary code in PerlAlloc that grew the buffer and then assigned
to it
- Created consume method to obtain external buffers
- Added check for overlapping memory regions when allocating/consuming new
buffers
- Fixed bug in DESTROY that attempted to free buffers (and their properties)
that had not been successfully allocated or consumed
- Added examples to illustrate the consumption of external buffers, both
Perl scalars and raw memory buffers. 
0.02      2024-12-01 20:32:10-07:00 America/Denver
- Separated Memory allocator that used C's malloc into its own package and
corrected typos
0.01      2024-08-25 17:41:34-06:00 America/Denver
- First version incorporating allocators based on Perl and C (malloc/calloc)
